{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productReducer } from './reducers/productReducer';\nimport cartReducer from './reducers/cartReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  product: productReducer,\n  cart: cartReducer\n});\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage\n  }\n};\nconst midlleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...midlleware)));","map":{"version":3,"sources":["D:/Js Project/Proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productReducer","cartReducer","reducer","productList","product","cart","cartItemFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","midlleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,2BAAnD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC3BQ,EAAAA,WAAW,EAAEJ,kBADc;AAE3BK,EAAAA,OAAO,EAAEJ,cAFkB;AAG3BK,EAAAA,IAAI,EAAEJ;AAHqB,CAAD,CAA/B;AAMA,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,EAA9G;AAGA,MAAMG,YAAY,GAAG;AAChBN,EAAAA,IAAI,EAAE;AAAEO,IAAAA,SAAS,EAAEN;AAAb;AADU,CAArB;AAGA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EAAUS,YAAV,EAAwBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAA3C,CAAzB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productReducer } from './reducers/productReducer'\r\nimport cartReducer from './reducers/cartReducer'\r\n\r\nconst reducer = combineReducers({\r\n     productList: productListReducer,\r\n     product: productReducer,\r\n     cart: cartReducer\r\n})\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : []\r\n\r\n\r\nconst initialState = {\r\n     cart: { cartItems: cartItemFromStorage }\r\n}\r\nconst midlleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...midlleware)));\r\n"]},"metadata":{},"sourceType":"module"}